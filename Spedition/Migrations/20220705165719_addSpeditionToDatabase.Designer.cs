// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spedition.Data;

namespace Spedition.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220705165719_addSpeditionToDatabase")]
    partial class addSpeditionToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Spedition.Models.Package", b =>
                {
                    b.Property<int>("id_package")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_trailer")
                        .HasColumnType("int");

                    b.Property<int>("id_truck")
                        .HasColumnType("int");

                    b.HasKey("id_package");

                    b.HasIndex("id_trailer")
                        .IsUnique();

                    b.HasIndex("id_truck")
                        .IsUnique();

                    b.ToTable("Package");
                });

            modelBuilder.Entity("Spedition.Models.Spedition", b =>
                {
                    b.Property<int>("id_spedition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("end_place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("start_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_spedition");

                    b.HasIndex("PackageId");

                    b.ToTable("Spedition");
                });

            modelBuilder.Entity("Spedition.Models.Trailer", b =>
                {
                    b.Property<int>("id_trailer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("trailer_manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trailer_model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trailer_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trailer_plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_trailer");

                    b.ToTable("Trailer");
                });

            modelBuilder.Entity("Spedition.Models.Truck", b =>
                {
                    b.Property<int>("id_truck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("truck_manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("truck_model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("truck_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("truck_plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_truck");

                    b.ToTable("Truck");
                });

            modelBuilder.Entity("Spedition.Models.Package", b =>
                {
                    b.HasOne("Spedition.Models.Trailer", "Trailer")
                        .WithOne("Package")
                        .HasForeignKey("Spedition.Models.Package", "id_trailer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spedition.Models.Truck", "Truck")
                        .WithOne("Package")
                        .HasForeignKey("Spedition.Models.Package", "id_truck")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trailer");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("Spedition.Models.Spedition", b =>
                {
                    b.HasOne("Spedition.Models.Package", "Package")
                        .WithMany("Spedition")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Spedition.Models.Package", b =>
                {
                    b.Navigation("Spedition");
                });

            modelBuilder.Entity("Spedition.Models.Trailer", b =>
                {
                    b.Navigation("Package");
                });

            modelBuilder.Entity("Spedition.Models.Truck", b =>
                {
                    b.Navigation("Package");
                });
#pragma warning restore 612, 618
        }
    }
}
